# Default GitHub build&push workflow
# Docs: https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages

name: Create and publish a Docker image

on:
  push:
    branches:
      - main
      - release
      - staging

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-prod:
    if: github.ref != 'refs/heads/staging'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    environment:
      name: Production
      url: https://vegancheck.me

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@b4bedf8053341df3b5a9f9e0f2cf4e79e27360c6
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@879dcbb708d40f8b8679d4f7941b938a086e23a7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Setup Production Env
        run: cp .env.main .env

      - name: Build and push Docker image
        id: build-prod
        uses: docker/build-push-action@fdf7f43ecf7c1a5c7afe936410233728a8c2d9c2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-prod:
    needs: build-and-push-prod
    if: success() && github.ref != 'refs/heads/staging'
    runs-on: ubuntu-latest

    steps:
      - name: SSH into the server and run Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd vegancheck
            docker-compose stop vc-frontend
            docker-compose pull vc-frontend
            docker-compose up -d vc-frontend

  build-and-push-staging:
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    environment:
      name: Staging
      url: https://staging.vegancheck.me

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@b4bedf8053341df3b5a9f9e0f2cf4e79e27360c6
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@879dcbb708d40f8b8679d4f7941b938a086e23a7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Setup Staging Env
        run: cp .env.development .env

      - name: Display .env contents
        run: cat .env

      - name: Build and push Docker image
        id: build-staging
        uses: docker/build-push-action@fdf7f43ecf7c1a5c7afe936410233728a8c2d9c2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-staging:
    needs: build-and-push-staging
    if: success() && github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest

    steps:
      - name: SSH into the server and run Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd vegancheck
            docker-compose stop vc-frontend
            docker-compose pull vc-frontend
            docker-compose up -d vc-frontend
